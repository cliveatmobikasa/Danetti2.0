{%- liquid
  assign hide_page = false
  if collection.handle == 'vendors' and collection.all_products_count == 0
    assign hide_page = true
  endif
  
  assign collection_for_metafields = collection

  if collection.metafields.nosto.sourceHandle != blank
    assign collection_for_metafields = collections[collection.metafields.nosto.sourceHandle]
  endif

  assign has_promotions = false
  if collection_for_metafields.metafields.promotions.enable == 'true'
    assign has_promotions = true
    assign total_promotion_width = 0

    for promotion in collection_for_metafields.metafields.promotion.width
      assign promotion_width = collection_for_metafields.metafields.promotion.width[forloop.index0]

      assign total_promotion_width = total_promotion_width | plus: promotion_width
    endfor
  endif

  assign total_tiles = section.settings.products_per_page
	if collection.metafields.clc_pagination.items_per_page != blank
		assign total_tiles = collection.metafields.clc_pagination.items_per_page | times: 1
	endif

  assign total_tiles_even_rows = total_tiles | modulo: 4
  assign pagination_amount = total_tiles | minus: total_tiles_even_rows | minus: total_promotion_width

  assign property_tags = blank
  assign property_images = blank
  assign is_mattress = false

  if collection.title contains 'Mattress' or collection.title == 'Firm Tension' or collection.title == 'Medium Tension'
    assign is_mattress = true
  endif

  if is_mattress == true
    assign property_tags = shop.metafields.mattress_properties.property_1_item_tag | concat: shop.metafields.mattress_properties.property_2_item_tag | concat: shop.metafields.mattress_properties.property_3_item_tag | concat: shop.metafields.mattress_properties.property_4_item_tag
    assign property_images = shop.metafields.mattress_properties.property_1_item_image | concat: shop.metafields.mattress_properties.property_2_item_image | concat: shop.metafields.mattress_properties.property_3_item_image | concat: shop.metafields.mattress_properties.property_4_item_image
  endif
-%}
{%- unless hide_page -%}
  {{ 'section-product-grid.css' | asset_url | stylesheet_tag }}
  {{ 'snippet-active-filters.css' | asset_url | stylesheet_tag }}
  {{ 'snippet-filters.css' | asset_url | stylesheet_tag }}
  {{ 'snippet-collection-filters.css' | asset_url | stylesheet_tag }}
  {{ 'snippet-pagination.css' | asset_url | stylesheet_tag }}
  {{ 'snippet-faqs.css' | asset_url | stylesheet_tag }}
  {{ 'snippet-accordion.css' | asset_url | stylesheet_tag }}
  <div class="clc-List">
    <div class="clc-List_Inner lyt-Container lyt-Container-wide">
      <div class="clc-List_HeaderContainer clc-Detail" data-module="collection" data-collection-container-el data-id="{{- section.id -}}">
        {%- paginate collection.products by pagination_amount -%}
          {%- if paginate.current_page <= paginate.pages -%}
            {%- if collection.metafields.breadcrumb.title != blank -%}
              {% if collection_for_metafields.metafields.collection_banner.enable_alternative_layout  %}
              {% else %}
                {%- render 'collection-breadcrumbs' -%}
              {% endif %}
            {%- endif -%}
  
            <form class="clc-Form" data-el="collection.form">
              <header class="clc-List_Header" data-el="collection.header">
                <div class="clc-Filters clc-Filters-desktop">
                  <div class="clc-ProductGridFacets" data-el="collection.form">
                    <div class="clc-ProductGridFacets_Facets" data-el="collection.facets">
                      {%- render 'collection-filters' -%}
                    </div>
                  </div>
                </div>
                <button class="clc-Filters_Button" data-module-drawers-trigger="filters">
                  {{ 'collections.filters.title' | t }}
  
                  <span class="clc-Filters_ButtonIcon">
                    {%- render 'bao-icon-filters' -%}
                  </span>
                </button>
                {%- render 'collection-sorting' -%}
              </header>
            </form>
  
            {%- render 'filters' -%}
  
            <section class="clc-ActiveFilters" data-el="collection.activeFacets">
              <div class="clc-ActiveFilters_Inner">
                <div class="clc-ActiveFilters_Filters">
                  {% render 'collection-active-filters' %}
                </div>
              </div>
            </section>
  
            <div class="clc-List_Body prd-Grid_Container" data-el="collection.productGrid">
              <ul
                class="clc-List_Items"
                {% if has_promotions == true %} data-module="collection-list-with-promotions"{% endif %}
                data-bc-sort="{{ collection.default_sort_by }}"
              >
  
                {%- assign counter_index = 1 -%}
  
                {%- for product in collection.products -%}
                  {%- if has_promotions == true -%}
                    {%- for promotion in collection_for_metafields.metafields.promotion.position -%}
                      {%- liquid
                        assign promotion_position = collection_for_metafields.metafields.promotion.position[forloop.index0] | times: 1
  
                        assign position_match = false
                        if promotion_position == counter_index
                          assign position_match = true
                        endif
                      -%}
  
                      {%- if position_match -%}
                        {%- liquid
                          assign promotion_image = collection_for_metafields.metafields.promotion.image[forloop.index0].first
                          assign promotion_autoplay = collection_for_metafields.metafields.promotion.enable_autoplay[forloop.index0]
                          assign promotion_title = collection_for_metafields.metafields.promotion.title[forloop.index0]
                          assign promotion_width = collection_for_metafields.metafields.promotion.width[forloop.index0]
                          assign promotion_subtitle = collection_for_metafields.metafields.promotion.subtitle[forloop.index0]
                          assign promotion_link = collection_for_metafields.metafields.promotion.link[forloop.index0]
                        -%}
  
                        <li
                          class="clc-List_Item clc-List_Item-promotion"
                          data-promotion-width="{{ promotion_width }}"
                          data-el="collection-list-with-promotions.promotion"
                        >
                          <a class="clc-Promotion" href="{{ promotion_link }}">
                            <div
                              class="clc-Promotion_ImageContainer"
                              data-el="collection-list-with-promotions.promotionImage"
                            >
                              <div class="clc-Promotion_Image">
                                {%- if promotion_image.media_type == 'video' -%}
                                  {%- render 'responsive-image-metafield',
                                    image: promotion_image,
                                    width: 1300,
                                    height: 760,
                                    video: true
                                    autoplay: promotion_autoplay
                                  -%}
                                {%- else -%}
                                  {%- render 'responsive-image-metafield',
                                    image: promotion_image,
                                    width: 1300,
                                    height: 760
                                  -%}
                              {%- endif -%}
                              </div>
                            </div>
  
                            <div class="clc-Promotion_Content">
                              <h3 class="clc-Promotion_Title">
                                {{ promotion_title }}
                              </h3>
  
                              <p class="clc-Promotion_Subtitle">
                                {{ promotion_subtitle }}
                              </p>
                            </div>
                          </a>
                        </li>
  
                        {%- break -%}
                      {%- endif -%}
                    {%- endfor -%}
                  {%- endif -%}
  
                  <li
                    class="clc-List_Item"
                    {% if has_promotions %}data-el="collection-list-with-promotions.item"{% endif %}
                  >
                    {%- render 'product-card',
                      product: product,
                      property_tags: property_tags,
                      property_images: property_images -%}
                  </li>
  
                  {%- assign counter_index = counter_index | plus: 1 -%}
  
                {%- endfor -%}
              </ul>
            </div>
  
            <div class="clc-Detail_Pagination" data-el="collection.pagination">
              {%- if paginate.pages > 1 -%}
                {%- render 'pagination', paginate: paginate -%}
              {%- endif -%}
            </div>
         {%- else -%}
            <div class="clc-Detail404">
              <div class="clc-Detail404_Inner">
                <h2 class="clc-Detail404_Title">
                  {{ 'pages.404.text' | t }}
                </h2>
  
                <a class="clc-Detail404_Link btn-Primary" href="{{ collection.url }}">
                  {{ 'pages.404.link_text' | t }}
                </a>
              </div>
            </div>
         {%- endif -%}
        {%- endpaginate -%}
      </div>
    </div>
  </div>
  {%- liquid
    assign faq_section_foreground = 'standard'
    assign faq_section_background = 'var(--Color_Grey-dark)'

    if collection_for_metafields.metafields.collection_faq.text_colour != blank
      assign faq_section_foreground = collection_for_metafields.metafields.collection_faq.text_colour | downcase
    endif

    if collection_for_metafields.metafields.collection_faq.hex != blank
      assign faq_section_background = collection_for_metafields.metafields.collection_faq.hex
    endif

    if collection_for_metafields.metafields.collection_faq.order != blank
      assign faq_order = collection_for_metafields.metafields.collection_faq.order
    endif

    if collection_for_metafields.metafields.collection_faq.title != blank
      assign faq_title = collection_for_metafields.metafields.collection_faq.title
    endif

    if collection_for_metafields.metafields.collection_faq.subtitle != blank
      assign faq_subtitle = collection_for_metafields.metafields.collection_faq.subtitle
    endif

    if collection_for_metafields.metafields.collection_faq.content != blank
      assign faq_content = collection_for_metafields.metafields.collection_faq.content
    endif

    if collection_for_metafields.metafields.collection_faq.image1 != blank
      assign faq_image1 = collection_for_metafields.metafields.collection_faq.image1
    endif

    if collection_for_metafields.metafields.collection_faq.image2 != blank
      assign faq_image2 = collection_for_metafields.metafields.collection_faq.image2
    endif

    if collection_for_metafields.metafields.collection_faq.button_text != blank
      assign faq_button_text = collection_for_metafields.metafields.collection_faq.button_text
    endif

    if collection_for_metafields.metafields.collection_faq.button_url != blank
      assign faq_button_url = collection_for_metafields.metafields.collection_faq.button_url
    endif

    if collection_for_metafields.metafields.collection_faq.accordion_title_1 != blank
      assign faq_accordion_title_1 = collection_for_metafields.metafields.collection_faq.accordion_title_1
    endif

    if collection_for_metafields.metafields.collection_faq.accordion_content_1 != blank
      assign faq_accordion_content_1 = collection_for_metafields.metafields.collection_faq.accordion_content_1
    endif

    if collection_for_metafields.metafields.collection_faq.accordion_title_2 != blank
      assign faq_accordion_title_2 = collection_for_metafields.metafields.collection_faq.accordion_title_2
    endif

    if collection_for_metafields.metafields.collection_faq.accordion_content_2 != blank
      assign faq_accordion_content_2 = collection_for_metafields.metafields.collection_faq.accordion_content_2
    endif

    if collection_for_metafields.metafields.collection_faq.info_title != blank
      assign faq_info_title = collection_for_metafields.metafields.collection_faq.info_title
    endif

    if collection_for_metafields.metafields.collection_faq.info_content != blank
      assign faq_info_content = collection_for_metafields.metafields.collection_faq.info_content
    endif
  -%}

  {%- if collection_for_metafields.metafields.collection_new_faq.show_section -%}
    {%- render 'expanded-faqs',
      collection_for_metafields: collection_for_metafields
    -%}
  {%- endif -%}

  {%- if collection_for_metafields.metafields.collection_faq.show_section == true or collection_for_metafields.metafields.collection_faq.show_section == 'true' -%}
    {%- render 'section-image-text-accordion',
      section_foreground: faq_section_foreground,
      section_background: faq_section_background,
      image_text_order: faq_order,
      image_text_title: faq_title,
      image_text_subtitle: faq_subtitle,
      image_text_content: faq_content.html,
      image_text_metafield_image1: faq_image1.first,
      image_text_metafield_image2: faq_image2.first,
      image_text_button_text: faq_button_text,
      image_text_button_url: faq_button_url,

      accordion_title_1: faq_accordion_title_1,
      accordion_content_1: faq_accordion_content_1.html,

      accordion_title_2: faq_accordion_title_2,
      accordion_content_2: faq_accordion_content_2.html,

      info_title: faq_info_title,
      info_content: faq_info_content.html
    -%}
  {%- endif -%}

  {%- liquid
    assign section_foreground = 'standard'
    assign section_background = 'var(--Color_Grey-dark)'

    if collection_for_metafields.metafields.collection_banner.text_colour != blank
      assign section_foreground = collection_for_metafields.metafields.collection_banner.text_colour | downcase
    endif

    if collection_for_metafields.metafields.collection_banner.hex != blank
      assign section_background = collection_for_metafields.metafields.collection_banner.hex
    endif

    if collection_for_metafields.metafields.desc_images.image1 != blank
      assign image_text_metafield_image = collection_for_metafields.metafields.desc_images.image1.first
    endif

    if collection_for_metafields.metafields.desc_images.image2 != blank
      assign image_text_metafield_image2 = collection_for_metafields.metafields.desc_images.image2.first
    endif
  -%}

  {%- if collection.description != blank -%}
    {%- unless collection.metafields.desc.disable -%}
      {%- render 'section-image-text',
        section_scroll: 'collection-description',
        section_foreground: section_foreground,
        section_background: section_background,
        image_text_order: 'reverse',
        image_text_title: collection.title,
        image_text_subtitle: '',
        image_text_content: collection.description,
        image_text_metafield_image1: image_text_metafield_image,
        image_text_metafield_image2: image_text_metafield_image2
      -%}
    {%- endunless -%}
  {%- endif -%}

  {%- liquid
    assign collection_for_articles = collection

    if collection_for_metafields.metafields.related_articles.use_other_collections_articles != blank
      assign collection_for_articles = collections[collection_for_metafields.metafields.related_articles.use_other_collections_articles]
    endif
  -%}

  {%- render 'related-articles',
    selected_articles: collection_for_articles.metafields.related_articles.articles
  -%}
{%- endunless -%}

{% schema %}
 {
	"name": "Collection pages",
	"settings": [
		{
			"type": "header",
			"content": "Product List"
		},
		{
			"type": "range",
			"id": "products_per_page",
			"label": "Products per page",
			"min": 4,
			"max": 50,
			"step": 1,
			"default": 20
		}
	]
}
{% endschema %}
